services:
  db:
    image: postgres:16
    container_name: ticket_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ticket_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ticket_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    depends_on:
      - db

  migrate:
    image: migrate/migrate
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/migrations:/migrations
    entrypoint: ["migrate", "-path", "/migrations", "-database", "postgres://postgres:password@db:5432/ticket_system?sslmode=disable", "up"]

  backend:
    build:
      context: ./backend
    container_name: ticket_backend
    restart: unless-stopped
    environment:
      DB_URL: postgres://postgres:password@db:5432/ticket_system?sslmode=disable
      JWT_SECRET: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
      SERVER_PORT: 8080
      LOG_LEVEL: INFO
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

volumes:
  pgdata:
