name: CI/CD Pipeline

on:
  push:
    branches: [ main, feature/*, ci/* ]
  pull_request:
    branches: [ main ]

jobs:
  lint-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2
      - name: Run golangci-lint
        run: |
          cd backend
          golangci-lint run ./...

  lint-cpp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Qt and clang-tidy
        run: |
          sudo apt-get update
          sudo apt-get install -y qtbase5-dev qt6-base-dev clang-tidy cmake g++
      - name: Run clang-tidy
        run: |
          cd  frontend/src
          find . -name '*.cpp' | xargs clang-tidy --warnings-as-errors='*' || true

  build-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Build backend
        run: |
          cd backend
          go build -v ./cmd/api

  build-cpp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Qt and build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y qtbase5-dev qt6-base-dev cmake g++
      - name: Build frontend
        run: |
          cd  frontend
          mkdir -p build && cd build
          cmake ..
          make

  test-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Run Go tests
        run: |
          cd backend
          go test -v ./...

  test-cpp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Qt and build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y qtbase5-dev qt6-base-dev cmake g++
      - name: Build and run C++ tests (scaffold)
        run: |
          cd  frontend
          mkdir -p build && cd build
          cmake ..
          make
          echo 'No C++ tests implemented yet.'

  docker-build:
    runs-on: ubuntu-latest
    needs: [build-go, build-cpp]
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker image
        run: |
          cd ticket-system
          docker build -t ticket-system-backend:latest -f backend/Dockerfile . 