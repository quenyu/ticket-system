services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ticket_system
    ports:
      - "5434:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ticket_system"]
      interval: 5s
      timeout: 2s
      retries: 5

  migrate:
    image: migrate/migrate
    volumes:
      - ./backend/migrations:/migrations
    entrypoint: ["migrate"]
    command:
      [
        "-database", "postgres://postgres:password@postgres:5432/ticket_system?sslmode=disable",
        "-path", "/migrations",
        "up"
      ]
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      - DB_URL=postgres://postgres:password@postgres:5432/ticket_system?sslmode=disable
      - JWT_SECRET=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
      - SERVER_PORT=8080
      - LOG_LEVEL=INFO
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    restart: on-failure

  adminer:
    image: adminer
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  db-data:
